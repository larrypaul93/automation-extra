{"version":3,"file":"index.cjs.js","sources":["../src/plugins.ts","../src/base.ts","../src/playwright.ts","../src/puppeteer.ts","../src/index.ts"],"sourcesContent":["import type { LauncherEnv, FilterString } from 'automation-extra-plugin'\nimport type * as types from './types'\n\nimport Debug from 'debug'\nconst debug = Debug('automation-extra:plugins')\n\nexport class PluginList {\n  private readonly _plugins: types.Plugin[] = []\n\n  constructor(private readonly env: LauncherEnv) {}\n\n  /**\n   * Get a list of all registered plugins.\n   *\n   * @member {Array<types.Plugin>}\n   */\n  get list() {\n    return this._plugins\n  }\n\n  /**\n   * Get the names of all registered plugins.\n   *\n   * @member {Array<string>}\n   * @private\n   */\n  get names() {\n    return this._plugins.map(p => p.name)\n  }\n\n  /**\n   * Add a new plugin to the list (after checking if it's well-formed).\n   *\n   * @param plugin\n   * @private\n   */\n  add(plugin: any) {\n    if (!plugin || !plugin.name) {\n      throw new Error('A plugin must have a .name property')\n    }\n    const isPuppeteerExtraPlugin = plugin._isPuppeteerExtraPlugin === true\n    const isPlaywrightDriver = this.env.driverName === 'playwright'\n    if (isPuppeteerExtraPlugin && isPlaywrightDriver) {\n      console.warn(\n        `Warning: Plugin \"${\n          (plugin.name as string) || 'unknown'\n        }\" is derived from PuppeteerExtraPlugin and will most likely not work with playwright.`\n      )\n    }\n\n    // Give the plugin access to the env info\n    plugin.env = this.env\n\n    if ('onPluginRegistered' in plugin) {\n      plugin.onPluginRegistered()\n      this.env.events.emit('onPluginRegistered')\n    }\n\n    if (plugin.requirements.has('dataFromPlugins')) {\n      plugin.getDataFromPlugins = this.getData.bind(this)\n    }\n\n    this._plugins.push(plugin)\n  }\n\n  /**\n   * Dispatch plugin lifecycle events in a typesafe way.\n   * Only Plugins that expose the supplied property will be called.\n   *\n   * Will not await results to dispatch events as fast as possible to all plugins.\n   *\n   * @param name - The lifecycle method name\n   * @param args - Optional: Any arguments to be supplied to the plugin methods\n   */\n  dispatch<TName extends types.PluginMethodNames>(\n    name: TName,\n    ...args: Parameters<types.PluginMethodFn<TName>>\n  ): void {\n    const filteredPlugins = this.filteredPlugins\n    const plugins: types.AutomationExtraPlugin[] = filteredPlugins.filter(\n      plugin => name in plugin\n    ) as any\n    debug('dispatch', {\n      name,\n      currentEnv: `${this.env.driverName}:${this.env.browserName}`,\n      plugins: {\n        all: this._plugins.length,\n        filtered: filteredPlugins.length,\n        filteredWithEvent: plugins.length\n      }\n    })\n    for (const plugin of plugins) {\n      try {\n        ;(plugin[name] as any)(...args)\n      } catch (err) {\n        console.warn(\n          `An error occured while executing ${name} in plugin \"${plugin.name}\":`,\n          err\n        )\n      }\n    }\n    this.env.events.emit(name, ...(args as any))\n  }\n\n  /**\n   * Dispatch plugin lifecycle events in a typesafe way.\n   * Only Plugins that expose the supplied property will be called.\n   *\n   * Can also be used to get a definite return value after passing it to plugins:\n   * Calls plugins sequentially and passes on a value (waterfall style).\n   *\n   * The plugins can either modify the value or return an updated one.\n   * Will return the latest, updated value which ran through all plugins.\n   *\n   * By convention only the first argument will be used as the updated value.\n   *\n   * @param name - The lifecycle method name\n   * @param args - Optional: Any arguments to be supplied to the plugin methods\n   */\n  async dispatchBlocking<TName extends types.PluginMethodNames>(\n    name: TName,\n    ...args: Parameters<types.PluginMethodFn<TName>>\n  ): Promise<ReturnType<types.PluginMethodFn<TName>>> {\n    const filteredPlugins = this.filteredPlugins\n    const plugins: types.AutomationExtraPlugin[] = filteredPlugins.filter(\n      plugin => name in plugin\n    ) as any\n    debug('dispatchBlocking', {\n      name,\n      currentEnv: `${this.env.driverName}:${this.env.browserName}`,\n      plugins: {\n        all: this._plugins.length,\n        filtered: filteredPlugins.length,\n        filteredWithEvent: plugins.length\n      }\n    })\n\n    let retValue: any = null\n    for (const plugin of plugins) {\n      try {\n        retValue = await (plugin[name] as any)(...args)\n        // In case we got a return value use that as new first argument for followup function calls\n        if (retValue !== undefined) {\n          args[0] = retValue\n        }\n      } catch (err) {\n        console.warn(\n          `An error occured while executing ${name} in plugin \"${plugin.name}\":`,\n          err\n        )\n        return retValue\n      }\n    }\n    this.env.events.emit(name, ...(args as any))\n    return retValue\n  }\n\n  dispatchLegacy<TName extends types.LegacyPluginMethodNames>(\n    name: TName,\n    ...args: Parameters<types.LegacyPluginMethodFn<TName>>\n  ): void {\n    const filteredPlugins = this.filteredPlugins\n    const plugins: types.PuppeteerExtraPlugin[] = filteredPlugins.filter(\n      plugin => name in plugin\n    ) as any\n    debug('dispatch', {\n      name,\n      currentEnv: `${this.env.driverName}:${this.env.browserName}`,\n      plugins: {\n        all: this._plugins.length,\n        filtered: filteredPlugins.length,\n        filteredWithEvent: plugins.length\n      }\n    })\n\n    for (const plugin of plugins) {\n      try {\n        ;(plugin[name] as any)(...args)\n        // In case we got a return value use that as new first argument for followup function calls\n      } catch (err) {\n        console.warn(\n          `An error occured while executing ${name} in plugin \"${plugin.name}\":`,\n          err\n        )\n      }\n    }\n  }\n\n  /**\n   * Filter plugins based on their `filter` stanza\n   */\n  get filteredPlugins(): types.Plugin[] {\n    const currentEnv = `${this.env.driverName}:${this.env.browserName}` as FilterString\n    const plugins = (this._plugins as types.AutomationExtraPlugin[]).filter(\n      plugin => {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (plugin.filter?.include?.length) {\n          return plugin.filter.include.includes(currentEnv)\n          // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        } else if (plugin.filter?.exclude?.length) {\n          // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n          return !plugin.filter.exclude.includes(currentEnv)\n        }\n        return true // keep plugin\n      }\n    )\n    return plugins as types.Plugin[]\n  }\n\n  /**\n   * Order plugins that have expressed a special placement requirement.\n   *\n   * This is useful/necessary for e.g. plugins that depend on the data from other plugins.\n   *\n   * @private\n   */\n  order() {\n    debug('order:before', this.names)\n    const runLast = this._plugins\n      .filter(p => p.requirements.has('runLast'))\n      .map(p => p.name)\n    for (const name of runLast) {\n      const index = this._plugins.findIndex(p => p.name === name)\n      this._plugins.push(this._plugins.splice(index, 1)[0])\n    }\n    debug('order:after', this.names)\n  }\n\n  /**\n   * Lightweight plugin requirement checking.\n   *\n   * The main intent is to notify the user when a plugin won't work as expected.\n   *\n   * @todo This could be improved, e.g. be evaluated by the plugin base class.\n   *\n   * @private\n   */\n  checkRequirements(launchContext: types.LaunchContext) {\n    for (const plugin of this._plugins) {\n      for (const requirement of plugin.requirements) {\n        if (\n          launchContext.context === 'launch' &&\n          requirement === 'headful' &&\n          launchContext.isHeadless\n        ) {\n          debug(\n            `Warning: Plugin '${plugin.name}' is not supported in headless mode.`\n          )\n        }\n        if (launchContext.context === 'connect' && requirement === 'launch') {\n          debug(`Warning: Plugin '${plugin.name}' doesn't support connect().`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Collects the exposed `data` property of all registered plugins.\n   * Will be reduced/flattened to a single array.\n   *\n   * Can be accessed by plugins that listed the `dataFromPlugins` requirement.\n   *\n   * Implemented mainly for plugins that need data from other plugins (e.g. `user-preferences`).\n   *\n   * @see [PuppeteerExtraPlugin]/data\n   * @param name - Filter data by optional name\n   *\n   * @private\n   */\n  getData(name?: string) {\n    const data = this._plugins\n      .filter((p: any) => !!p.data)\n      .map((p: any) => (Array.isArray(p.data) ? p.data : [p.data]))\n      .reduce((acc, arr) => [...acc, ...arr], [])\n    return name ? data.filter((d: any) => d.name === name) : data\n  }\n\n  /**\n   * Lightweight plugin dependency management to require plugins and code mods on demand.\n   *\n   * This uses the `dependencies` stanza (a `Set` or `Map`) exposed by `automation-extra` plugins.\n   *\n   * @private\n   */\n  resolveDependencies() {\n    debug('resolveDependencies')\n    const pluginNames = new Set(this._plugins.map((p: any) => p.name))\n\n    // Handle `plugins` stanza\n    this._plugins\n      .filter(p => 'plugins' in p && p.plugins.length)\n      .map(p => p as types.AutomationExtraPlugin)\n      .forEach(parent => {\n        parent.plugins\n          .filter(p => !pluginNames.has(p.name))\n          .forEach(p => {\n            debug('adding missing plugin', p.name)\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (parent.filter && !p.filter) {\n              // Make child plugins inherit the parents filter if they don't have anything specified\n              Object.defineProperty(p, 'filter', {\n                get() {\n                  return parent.filter\n                }\n              })\n            }\n            this.add(p)\n          })\n      })\n\n    // Handle `dependencies` stanza\n    const allDeps: Map<string, any> = new Map()\n    this._plugins\n      // Skip plugins without dependencies\n      .filter(p => 'dependencies' in p && p.dependencies.size)\n      .map(p => p.dependencies)\n      .forEach(deps => {\n        if (deps instanceof Set) {\n          deps.forEach(k => allDeps.set(k, {}))\n        }\n        if (deps instanceof Map) {\n          deps.forEach((v, k) => {\n            allDeps.set(k, v) // Note: k,v => v,k\n          })\n        }\n      })\n\n    const missingDeps = new Map(\n      [...allDeps].filter(([k]) => !pluginNames.has(k))\n    )\n\n    if (!missingDeps.size) {\n      debug('no dependencies are missing')\n      return\n    }\n    debug('dependencies missing', missingDeps)\n    // Loop through all dependencies declared missing by plugins\n    for (const [name, opts] of [...missingDeps]) {\n      // Check if the dependency hasn't been registered as plugin already.\n      // This might happen when multiple plugins have nested dependencies.\n      if (this.names.includes(name)) {\n        debug(`ignoring dependency '${name}', which has been required already.`)\n        continue\n      }\n\n      const hasFullName =\n        name.startsWith('puppeteer-extra-plugin') ||\n        name.startsWith('automation-extra-plugin')\n\n      // We follow a plugin naming convention, but let's rather enforce it <3\n      const requireNames = hasFullName\n        ? [name]\n        : [`automation-extra-plugin-${name}`, `puppeteer-extra-plugin-${name}`]\n\n      const pkg = requirePackages(requireNames)\n      if (!pkg) {\n        throw new Error(`\n          A plugin listed '${name}' as dependency,\n          which is currently missing. Please install it:\n\n${requireNames\n  .map(name => {\n    return `yarn add ${name.split('/')[0]}`\n  })\n  .join(`\\n or:\\n`)}\n\n          Note: You don't need to require the plugin yourself,\n          unless you want to modify it's default settings.\n          `)\n      }\n      const plugin: types.Plugin = pkg(opts)\n      this.add(plugin)\n\n      // Handle nested dependencies :D\n      if (plugin.dependencies?.size) {\n        this.resolveDependencies()\n      }\n    }\n  }\n}\n\nfunction requirePackages(packages: string[]) {\n  for (const name of packages) {\n    try {\n      return require(name)\n    } catch (_) {\n      continue // noop\n    }\n  }\n  return false\n}\n","import type * as pw from 'playwright-core'\nimport type * as pptr from 'puppeteer'\nimport type * as types from './types'\n\nimport { LauncherEnv } from 'automation-extra-plugin'\nimport { PluginList } from './plugins'\n\nimport Debug from 'debug'\nconst debug = Debug('automation-extra')\n\nexport class AutomationExtraBase {\n  /** Information about the launcher environment */\n  public readonly env: LauncherEnv\n  /** List of plugins */\n  public readonly plugins: PluginList\n\n  constructor(\n    driverName: types.SupportedDrivers,\n    protected _launcher?: types.BrowserLauncher\n  ) {\n    this.env = new LauncherEnv(driverName)\n    this.plugins = new PluginList(this.env)\n  }\n\n  /**\n   * The **main interface** to register plugins.\n   *\n   * @example\n   * puppeteer.use(plugin1).use(plugin2)\n   * // or\n   * chromium.use(plugin1).use(plugin2)\n   * firefox.use(plugin1).use(plugin2)\n   *\n   * @see [AutomationExtraPlugin]\n   *\n   * @return The same `PuppeteerExtra` or `PlaywrightExtra` instance (for optional chaining)\n   */\n  public use(plugin: types.Plugin): this {\n    const isValid = plugin && 'name' in plugin\n    if (!isValid) {\n      throw new Error('A plugin must be provided to .use()')\n    }\n\n    this.plugins.add(plugin)\n    debug('Plugin registered', plugin.name) /* tslint:disable-line */\n\n    return this\n  }\n\n  /**\n   * In order to support a default export which will require vanilla puppeteer or playwright automatically,\n   * as well as named exports to patch the provided launcher, we need to so some gymnastics here unfortunately.\n   *\n   * If we just do e.g. `require('puppeteer')` in our default export this would throw immediately,\n   * even when only using the `addExtra` export in combination with `puppeteer-core`. :-/\n   *\n   * The solution is to make the vanilla launcher optional and only throw once we try to effectively use and can't find it.\n   */\n  protected get launcher(): types.BrowserLauncher {\n    if (!this._launcher) {\n      this._launcher = this._requireLauncherOrThrow()\n      // In case we're dealing with Playwright we need to add the product name to the import\n      if (this.env.isPlaywright) {\n        this._launcher = (this._launcher as any)[this.env.browserName]\n      }\n    }\n    return this._launcher as types.BrowserLauncher\n  }\n\n  /** @internal */\n  protected async _connect(\n    options: types.ConnectOptions = {}\n  ): Promise<types.Browser> {\n    return await this._launchOrConnect('connect', options)\n  }\n\n  /** @internal */\n  protected async _launch(\n    options: types.LaunchOptions = {}\n  ): Promise<types.Browser> {\n    return await this._launchOrConnect('launch', options)\n  }\n\n  /** @internal */\n  protected async _launchOrConnect(\n    method: 'launch' | 'connect',\n    options: types.LaunchOptions | types.ConnectOptions = {}\n  ): Promise<types.Browser> {\n    debug(method)\n\n    this.plugins.order()\n    this.plugins.resolveDependencies()\n\n    const beforeEvent = method === 'launch' ? 'beforeLaunch' : 'beforeConnect'\n    const afterEvent = method === 'launch' ? 'afterLaunch' : 'afterConnect'\n\n    // Only now we know the final browser with puppeteer\n    if (this.env.isPuppeteer) {\n      this.env.browserName = getPuppeteerProduct(options)\n    }\n\n    // Make it possible for plugins to use `options.args` without checking\n    if (!isConnectOptions(options)) {\n      if (typeof options.args === 'undefined') {\n        options.args = []\n      }\n    }\n\n    // Give plugins the chance to modify the options before launch/connect\n    options =\n      (await this.plugins.dispatchBlocking(beforeEvent, options)) || options\n\n    // One of the plugins might have changed the browser product\n    if (this.env.isPuppeteer) {\n      this.env.browserName = getPuppeteerProduct(options)\n    }\n\n    const isHeadless = (() => {\n      if (isConnectOptions(options)) {\n        return false // we don't know :-)\n      }\n      if ('headless' in options) {\n        return options.headless === true\n      }\n      return true // default\n    })()\n\n    const launchContext: types.LaunchContext = {\n      context: method,\n      isHeadless,\n      options\n    }\n\n    // Let's check requirements after plugin had the chance to modify the options\n    this.plugins.checkRequirements(launchContext)\n\n    const browser = await this.launcher[method](options as any)\n\n    if (this.env.isPuppeteerBrowser(browser)) {\n      this._patchPageCreationMethods(browser)\n    }\n\n    await this.plugins.dispatchBlocking('onBrowser', browser, launchContext)\n\n    if (this.env.isPuppeteerBrowser(browser)) {\n      await this._bindPuppeteerBrowserEvents(browser)\n    } else {\n      await this._bindPlaywrightBrowserEvents(browser)\n    }\n\n    await this.plugins.dispatchBlocking(afterEvent, browser, launchContext)\n    return browser\n  }\n\n  protected async _bindPuppeteerBrowserEvents(browser: pptr.Browser) {\n    debug('_bindPuppeteerBrowserEvents')\n\n    browser.on('disconnected', () => {\n      this.plugins.dispatch('onDisconnected', browser)\n      this.plugins.dispatchLegacy('onClose')\n    })\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    browser.on('targetcreated', async (target: pptr.Target) => {\n      debug('targetcreated')\n      this.plugins.dispatchLegacy('onTargetCreated', target)\n      // Pre filter pages for plugin developers convenience\n      if (target.type() === 'page') {\n        const page = await target.page()\n        page.on('close', () => {\n          this.plugins.dispatch('onPageClose', page)\n        })\n        page.on('workercreated', worker => {\n          // handle dedicated webworkers\n          this.plugins.dispatch('onWorkerCreated', worker)\n        })\n        this.plugins.dispatch('onPageCreated', page)\n      }\n      if (\n        target.type() === 'service_worker' ||\n        target.type() === 'shared_worker'\n      ) {\n        // handle service + shared workers\n        const worker = await target.worker()\n        if (worker) {\n          this.plugins.dispatch('onWorkerCreated', worker)\n        }\n      }\n    })\n    // // Legacy events\n    browser.on('targetchanged', (target: pptr.Target) => {\n      this.plugins.dispatchLegacy('onTargetChanged', target)\n    })\n    browser.on('targetdestroyed', (target: pptr.Target) => {\n      this.plugins.dispatchLegacy('onTargetDestroyed', target)\n    })\n  }\n\n  protected async _bindPlaywrightBrowserEvents(browser: pw.Browser) {\n    debug('_bindPlaywrightBrowserEvents')\n\n    browser.on('disconnected', () => {\n      this.plugins.dispatch('onDisconnected', browser)\n    })\n\n    const bindContextEvents = (context: pw.BrowserContext) => {\n      // Make sure things like `addInitScript` show an effect on the very first page as well\n      context.newPage = ((originalMethod, ctx) => {\n        return async () => {\n          const page = await originalMethod.call(ctx)\n          await page.goto('about:blank')\n          return page\n        }\n      })(context.newPage, context)\n\n      context.on('close', () => {\n        this.plugins.dispatch('onContextClose', context)\n      })\n      context.on('page', page => {\n        this.plugins.dispatch('onPageCreated', page)\n\n        page.on('close', () => {\n          this.plugins.dispatch('onPageClose', page)\n        })\n\n        page.on('worker', worker => {\n          // handle dedicated webworkers\n          this.plugins.dispatch('onWorkerCreated', worker)\n        })\n\n        if (this.env.isChromium) {\n          ;(context as pw.ChromiumBrowserContext).on(\n            'serviceworker',\n            worker => {\n              // handle service worker\n              this.plugins.dispatch('onWorkerCreated', worker)\n            }\n          )\n        }\n      })\n    }\n\n    // Note: `browser.newPage` will implicitly call `browser.newContext` as well\n    browser.newContext = ((originalMethod, ctx) => {\n      return async (options: pw.BrowserContextOptions = {}) => {\n        const contextOptions: pw.BrowserContextOptions =\n          (await this.plugins.dispatchBlocking(\n            'beforeContext',\n            options || {},\n            browser\n          )) || options\n        const context = await originalMethod.call(ctx, contextOptions)\n        this.plugins.dispatch('onContextCreated', context, contextOptions)\n\n        bindContextEvents(context)\n        return context\n      }\n    })(browser.newContext, browser)\n  }\n\n  /**\n   * Puppeteer: Patch page creation methods (both regular and incognito contexts).\n   *\n   * Unfortunately it's possible that the `targetcreated` events are not triggered\n   * early enough for listeners (e.g. plugins using `onPageCreated`) to be able to\n   * modify the page instance (e.g. user-agent) before the browser request occurs.\n   *\n   * This only affects the first request of a newly created page target.\n   *\n   * As a workaround I've noticed that navigating to `about:blank` (again),\n   * right after a page has been created reliably fixes this issue and adds\n   * no noticable delay or side-effects.\n   *\n   * This problem is not specific to `puppeteer-extra` but default Puppeteer behaviour.\n   *\n   * Note: This patch only fixes explicitly created pages, implicitly created ones\n   * (e.g. through `window.open`) are still subject to this issue. I didn't find a\n   * reliable mitigation for implicitly created pages yet.\n   *\n   * Puppeteer issues:\n   * https://github.com/GoogleChrome/puppeteer/issues/2669\n   * https://github.com/puppeteer/puppeteer/issues/3667\n   * https://github.com/GoogleChrome/puppeteer/issues/386#issuecomment-343059315\n   * https://github.com/GoogleChrome/puppeteer/issues/1378#issue-273733905\n   *\n   * @private\n   */\n  private _patchPageCreationMethods(browser: pptr.Browser) {\n    if (!browser || !browser._createPageInContext) {\n      return\n    }\n\n    browser._createPageInContext = (function (originalMethod, context) {\n      return async function () {\n        const page = await originalMethod.apply(context, arguments as any)\n        await page.goto('about:blank')\n        return page\n      }\n    })(browser._createPageInContext, browser)\n  }\n\n  protected _requireLauncherOrThrow() {\n    const driverName = this.env.driverName\n    const packages = [driverName + '-core', driverName]\n    const launcher = requirePackages(packages)\n    if (launcher) {\n      return launcher\n    }\n\n    const driverNamePretty =\n      driverName.charAt(0).toUpperCase() + driverName.slice(1)\n    throw new Error(`\n\n  ${driverNamePretty} is missing. :-)\n\n  I tried requiring ${packages.join(', ')} - no luck.\n\n  Make sure you install one of those packages or use the named 'addExtra' export,\n  to patch a specific (and maybe non-standard) implementation of ${driverNamePretty}.\n\n  To get the latest stable version of ${driverNamePretty} run:\n  'yarn add ${driverName}' or 'npm i ${driverName}'\n  `)\n  }\n}\n\nfunction requirePackages(packages: string[]) {\n  for (const name of packages) {\n    try {\n      return require(name)\n    } catch (_) {\n      continue // noop\n    }\n  }\n  return false\n}\n\n/** Type guard: check if current options are connect options */\nfunction isConnectOptions(\n  options: types.ConnectOptions | types.LaunchOptions\n): options is types.ConnectOptions {\n  const yup =\n    'browserURL' in (options as pptr.ConnectOptions) ||\n    'browserWSEndpoint' in (options as pptr.ConnectOptions) ||\n    'wsEndpoint' in (options as pw.ConnectOptions)\n  return yup\n}\n\nfunction getPuppeteerProduct(\n  options: pptr.LaunchOptions\n): 'firefox' | 'chromium' {\n  // Puppeteer supports defining the browser during launch or through an environment variable\n  const override = process.env.PUPPETEER_PRODUCT ?? (options || {}).product\n  return override === 'firefox' ? 'firefox' : 'chromium'\n}\n","import type * as pw from 'playwright-core'\nimport type * as types from './types'\n\nimport { AutomationExtraBase } from './base'\n\nexport class PlaywrightExtra\n  extends AutomationExtraBase\n  implements types.PlaywrightBrowserLauncher {\n  protected readonly vanillaLauncher: types.PlaywrightBrowserLauncher\n\n  constructor(\n    _launcherOrBrowserName:\n      | types.PlaywrightBrowserLauncher\n      | types.PlaywrightBrowsers\n  ) {\n    if (typeof _launcherOrBrowserName === 'string') {\n      super('playwright')\n      this.env.browserName = _launcherOrBrowserName\n    } else {\n      super('playwright', _launcherOrBrowserName)\n      this.env.browserName = _launcherOrBrowserName.name() as types.PlaywrightBrowsers\n    }\n    this.vanillaLauncher = this.launcher as types.PlaywrightBrowserLauncher\n  }\n\n  // Stuff we augment for plugin purposes\n  async connect(options: pw.ConnectOptions): Promise<pw.Browser> {\n    const result = await this._connect(options)\n    return result as pw.Browser\n  }\n  async launch(options?: pw.LaunchOptions): Promise<pw.Browser> {\n    const result = await this._launch(options)\n    return result as pw.Browser\n  }\n  async connectOverCDP(params: pw.ConnectOverCDPOptions): Promise<pw.Browser>\n  async connectOverCDP(params: pw.ConnectOptions): Promise<pw.Browser>\n  async connectOverCDP(params:  pw.ConnectOptions | pw.ConnectOverCDPOptions): Promise<pw.Browser> {\n    return {} as  pw.Browser\n}\n\n  // FIXME: Augment this\n  async launchPersistentContext(\n    userDataDir: string,\n    options?: any // Not exported\n  ): Promise<pw.BrowserContext> {\n    console.warn(\n      'Note: launchPersistentContext does not trigger plugins currently.'\n    )\n    return await this.vanillaLauncher.launchPersistentContext(\n      userDataDir,\n      options\n    )\n  }\n  async launchServer(\n    options?: any // Not exported\n  ): Promise<pw.BrowserServer> {\n    return await this.vanillaLauncher.launchServer(options)\n  }\n\n  // Playwright specific things we just pipe through\n  executablePath(): string {\n    return this.vanillaLauncher.executablePath()\n  }\n  name(): string {\n    return this.vanillaLauncher.name()\n  }\n}\n","import type * as pptr from 'puppeteer'\nimport type * as types from './types'\n\nimport { AutomationExtraBase } from './base'\n\nexport class PuppeteerExtra\n  extends AutomationExtraBase\n  implements types.PuppeteerBrowserLauncher {\n  protected readonly vanillaLauncher = this\n    .launcher as types.PuppeteerBrowserLauncher\n\n  constructor(_launcher?: types.PuppeteerBrowserLauncher) {\n    super('puppeteer', _launcher)\n    // Puppeteer supports defining the browser during `.launch`\n    this.env.browserName = 'unknown'\n  }\n\n  // Stuff we augment for plugin purposes\n  async connect(options?: pptr.ConnectOptions): Promise<pptr.Browser> {\n    const result = await this._connect(options)\n    return result as pptr.Browser\n  }\n  async launch(options?: pptr.LaunchOptions): Promise<pptr.Browser> {\n    const result = await this._launch(options)\n    return result as pptr.Browser\n  }\n\n  // Puppeteer specific things we just pipe through\n  defaultArgs(options?: pptr.ChromeArgOptions): string[] {\n    return this.vanillaLauncher.defaultArgs(options)\n  }\n  executablePath(): string {\n    return this.vanillaLauncher.executablePath()\n  }\n  createBrowserFetcher(options?: pptr.FetcherOptions): pptr.BrowserFetcher {\n    return this.vanillaLauncher.createBrowserFetcher(options)\n  }\n}\n","import type {\n  PlaywrightBrowsers,\n  PlaywrightBrowserLauncher,\n  PuppeteerBrowserLauncher\n} from './types'\n// import type * as types from './types'\nimport type * as pw from 'playwright-core'\nimport type * as pptr from 'puppeteer'\n\nimport { PlaywrightExtra } from './playwright'\nimport { PuppeteerExtra } from './puppeteer'\n\nexport * from './types'\nexport type { pw as Playwright }\nexport type { pptr as Puppeteer }\n\nexport { PlaywrightExtra } from './playwright'\nexport { PuppeteerExtra } from './puppeteer'\nexport { AutomationExtraBase } from './base'\n\n/**\n * Augment a Puppeteer or Playwright API compatible browser launcher with plugin functionality.\n * Note: We can't use `addExtra` here as we wildcard export this file in `playwright-extra` and `puppeteer-extra`\n *\n * @param launcher - Puppeteer or Playwright API compatible browser launcher\n * @private\n */\nexport const _addExtra = (\n  launcher: PuppeteerBrowserLauncher | PlaywrightBrowserLauncher\n): PuppeteerExtra | PlaywrightExtra => {\n  // General checks\n  if (!launcher || typeof launcher !== 'object') {\n    throw new Error('Invalid browser launcher: Expected object.')\n  }\n  if (!('launch' in launcher || 'connect' in launcher)) {\n    throw new Error(\n      'Invalid browser launcher: Must provide \"launch\" or \"connect\" method.'\n    )\n  }\n\n  // Check for Playwright\n  if ('name' in launcher) {\n    const validBrowserNames: PlaywrightBrowsers[] = [\n      'chromium',\n      'firefox',\n      'webkit'\n    ]\n    const hasValidBrowserName = validBrowserNames.includes(\n      launcher.name() as PlaywrightBrowsers\n    )\n    if (!hasValidBrowserName) {\n      throw new Error(\n        `Invalid Playwright launcher: Unexpected browser name \"${launcher.name()}\".`\n      )\n    }\n    return new PlaywrightExtra(launcher)\n  }\n\n  // Everything else we treat as Puppeteer or a custom puppeteer-like implementation\n  return new PuppeteerExtra(launcher)\n}\n\n/**\n * Augment the provided Playwright browser launcher with plugin functionality.\n *\n * @example\n * import playwright from 'playwright'\n * const chromium = addExtra(playwright.chromium)\n * chromium.use(plugin)\n *\n * @param launcher - Playwright (or compatible) browser launcher\n */\nexport const addExtraPlaywright = (\n  launcher: PlaywrightBrowserLauncher\n): PlaywrightExtra => _addExtra(launcher) as PlaywrightExtra\n\n/**\n * Augment the provided Puppeteer browser launcher with plugin functionality.\n *\n * @example\n * import vanillaPuppeteer from 'puppeteer'\n * const puppeteer = addExtra(vanillaPuppeteer)\n * puppeteer.use(plugin)\n *\n * @param launcher - Puppeteer (or compatible) browser launcher\n */\nexport const addExtraPuppeteer = (\n  launcher: PuppeteerBrowserLauncher\n): PuppeteerExtra => _addExtra(launcher) as PuppeteerExtra\n"],"names":["debug","Debug","requirePackages","LauncherEnv"],"mappings":"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"}